server.context-path=/
server.port=8080
#spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb?useUnicode=true&characterEncoding=utf8
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springbootdb?useSSL=false&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

########################## druid\u6570\u636E\u6E90\u914D\u7F6E start #############################
# \u4F7F\u7528druid\u6570\u636E\u6E90
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# \u521D\u59CB\u5316\u7684\u65F6\u5019\u4F1A\u521B\u5EFA\u4E00\u5B9A\u6570\u91CF\u7684\u8FDE\u63A5\u5230\u8FDE\u63A5\u6C60\u4E2D
spring.datasource.initialSize=5
# \u6700\u5C0F\u8FDE\u63A5\u6570 \u65E0\u8BBA\u8FD9\u4E9B\u8FDE\u63A5\u662F\u5426\u88AB\u4F7F\u7528\u90FD\u4FDD\u7559\u7740\u8FD9\u4E9B\u6570\u91CF\u7684\u8FDE\u63A5
spring.datasource.minIdle=5
# \u8FDE\u63A5\u6C60\u4E2D\u6700\u5927\u7684\u8FDE\u63A5\u6570\uFF0C\u5982\u679C\u8D85\u8FC7\u6700\u5927\u503C\uFF0C\u540E\u9762\u7684\u8FDE\u63A5\u5C06\u7B49\u5F85\u52A0\u5165(\u4F7F\u7528\u516C\u5E73\u9501\u6392\u961F\u8FDB\u5165)
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
# \u8FDE\u63A5\u6D4B\u8BD5  \u6CE8\u610F MySQL orale \u4E2D\u6709 dual\u8868 sqlserver\u6570\u636E\u5E93\u6CA1\u6709
spring.datasource.validationQuery=SELECT 1 FROM DUAL
# \u7533\u8BF7\u8FDE\u63A5\u7684\u65F6\u5019\u68C0\u6D4B\uFF0C\u5EFA\u8BAE\u914D\u7F6E\u4E3Atrue\uFF0C\u4E0D\u5F71\u54CD\u6027\u80FD\uFF0C\u5E76\u4E14\u4FDD\u8BC1\u5B89\u5168\u6027
spring.datasource.testWhileIdle=true
# \u83B7\u53D6\u8FDE\u63A5\u65F6\u6267\u884C\u68C0\u6D4B\uFF0C\u5EFA\u8BAE\u5173\u95ED\uFF0C\u5F71\u54CD\u6027\u80FD
spring.datasource.testOnBorrow=false
# \u5F52\u8FD8\u8FDE\u63A5\u65F6\u6267\u884C\u68C0\u6D4B\uFF0C\u5EFA\u8BAE\u5173\u95ED\uFF0C\u5F71\u54CD\u6027\u80FD
spring.datasource.testOnReturn=false
# \u662F\u5426\u5F00\u542FPSCache\uFF0CPSCache\u5BF9\u652F\u6301\u6E38\u6807\u7684\u6570\u636E\u5E93\u6027\u80FD\u63D0\u5347\u5DE8\u5927\uFF0Coracle\u5EFA\u8BAE\u5F00\u542F\uFF0Cmysql\u4E0B\u5EFA\u8BAE\u5173\u95ED
spring.datasource.poolPreparedStatements=true
# \u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F \u5F00\u542FpoolPreparedStatements\u540E\u751F\u6548
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u6269\u5C55\u63D2\u4EF6 \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters \u5E38\u7528\u7684\u63D2\u4EF6\u6709=>stat:\u76D1\u63A7\u7EDF\u8BA1  log4j:\u65E5\u5FD7  wall:\u9632\u5FA1sql\u6CE8\u5165
#spring.datasource.filters=stat,wall,log4j
spring.datasource.filters=stat,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql(\u5408\u5E76sql)\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55  \u9ED8\u8BA4\u662F 3\u79D2
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true
########################## druid\u6570\u636E\u6E90\u914D\u7F6E end #############################


## Mybatis \u914D\u7F6E
mybatis.typeAliasesPackage=com.coolron.*.domain
mybatis.mapperLocations=classpath:mapping/*/*.xml

############## \u81EA\u5B9A\u4E49\u5C5E\u6027 #################
custom.properties.social.weixin.app-id = wxfd65ab1fadb2
custom.properties.social.weixin.app-secret = 66bb4566de776ac6ds1dbejhhcc3dd1
custom.properties.social.clients[0] = coolron
custom.properties.social.clients[1] = test

## Redis \u914D\u7F6E
## Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
## Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=127.0.0.1
## Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6333
## Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=
## \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=8
## \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
## \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=8
## \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
## \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=3000
