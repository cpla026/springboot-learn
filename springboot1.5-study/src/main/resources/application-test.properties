#\u8BBF\u95EE\u7684\u6839\u8DEF\u5F84
server.context-path=/
#\u7AEF\u53E3\u53F7
server.port=8090
#session\u5931\u6548\u65F6\u95F4
server.session-timeout=30
#\u7F16\u7801
server.tomcat.uri-encoding=utf-8

########################## \u6570\u636E\u5E93\u914D\u7F6E start #############################
#spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb?useUnicode=true&characterEncoding=utf8
spring.datasource.url=jdbc:mysql://11.20.2.10:3306/springbootdb?useSSL=false&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
########################## \u6570\u636E\u5E93\u914D\u7F6E end #############################

########################## druid\u6570\u636E\u6E90\u914D\u7F6E start #############################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true
########################## druid\u6570\u636E\u6E90\u914D\u7F6E end #############################

## Mybatis \u914D\u7F6E
mybatis.typeAliasesPackage=com.coolron.*.domain
mybatis.mapperLocations=classpath:mapping/*/*.xml
# \u5F00\u542F\u9A7C\u5CF0\u6620\u5C04 (Such as account_id ==> accountId)
mybatis.configuration.map-underscore-to-camel-case = true

# \u65E5\u5FD7\u7EA7\u522B TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF \u9ED8\u8BA4 INFO
# \u5C4F\u853D\u67D0\u4E2A\u6216\u8005\u591A\u4E2A\u5305\u4E0B\u4E0D\u8F93\u51FA\u65E5\u5FD7\u4E5F\u4E0D\u8BB0\u5F55\u65E5\u5FD7\u5230\u6587\u4EF6\u5185
# \u4E5F\u53EF\u4EE5\u6539\u53D8\u67D0\u4E2A\u5305\u4E0B\u7684\u65E5\u5FD7\u8F93\u51FA\u7B49\u7EA7\uFF0C\u53EA\u9700\u8981\u5C06'OFF'\u6539\u6210\u5BF9\u5E94\u7B49\u7EA7\u5373\u53EF
# \u5728application.yml\u914D\u7F6E\u6587\u4EF6\u5185\uFF0Coff\u5FC5\u987B\u6DFB\u52A0\u53CC\u5F15\u53F7\uFF0C\u5426\u5219\u4E0D\u4F1A\u751F\u6548\u3002
#logging.level.com.coolron.ron.controller=off
# \u5982\u9700\u663E\u793A sql \u8BED\u53E5  \u53EA\u9700\u8981\u6539mapper(dao) \u63A5\u53E3\u6240\u5728\u5305\u7684\u65E5\u5FD7\u7EA7\u522B\u5373\u53EF
#logging.level.com.coolron.ron.dao=debug

# Spring Boot\u9ED8\u8BA4\u914D\u7F6E\u53EA\u4F1A\u8F93\u51FA\u5230\u63A7\u5236\u53F0\uFF0C\u5E76\u4E0D\u4F1A\u8BB0\u5F55\u5230\u6587\u4EF6\u4E2D\uFF0C\u4F46\u662F\u6211\u4EEC\u901A\u5E38\u751F\u4EA7\u73AF\u5883\u4F7F\u7528\u65F6\u90FD\u9700\u8981\u4EE5\u6587\u4EF6\u65B9\u5F0F\u8BB0\u5F55
# \u914D\u7F6E logging.file\u6216 logging.path\u5C5E\u6027\u5373\u53EF\u8F93\u51FA\u65E5\u5FD7\u5230\u6587\u4EF6
# \u53EF\u4EE5\u662F\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u4E5F\u53EF\u4EE5\u662F\u76F8\u5BF9\u8DEF\u5F84
#logging.file=my.log
#logging.path=./log
# \u63A7\u5236\u53F0\u591A\u5F69\u8F93\u51FA
#spring.output.ansi.enabled=DETECT

# \u968F\u673Along
springboot.random-id=${random.int[1,10]}

############## \u81EA\u5B9A\u4E49\u5C5E\u6027 #################
custom.properties.social.weixin.app-id = wxfd65ab1fadb2
custom.properties.social.weixin.app-secret = 66bb4566de776ac6ds1dbejhhcc3dd1
custom.properties.social.clients[0] = coolron
custom.properties.social.clients[1] = test

## Redis \u914D\u7F6E
## Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
## Redis\u670D\u52A1\u5668\u5730\u5740
spring.redis.host=10.20.2.10
## Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6333
## Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=
## \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-active=8
## \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.pool.max-wait=-1
## \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.max-idle=8
## \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.pool.min-idle=0
## \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=3000

# \u5FAE\u4FE1\u83B7\u53D6 openID
appid=wx16421f63080c7914
secret=feb918b343fe4508ddb4532895aa3ca7
grant_type=12_gIXmRyVKrAZRL97J3wT17sH5LJFIdf05j5GapegcGlNtPntiCfha0drBT9ZXwwZa-ModNEE6XbFjlqKt0YEpk9LHNuTC6gLqf9NkBSIkFQMSidwGMEbamsoBSk0NWVbAHAVED
url=https://api.weixin.qq.com/sns/jscode2session