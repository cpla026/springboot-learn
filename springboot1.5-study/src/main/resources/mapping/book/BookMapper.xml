<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coolron.book.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.coolron.book.domain.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="alt" jdbcType="VARCHAR" property="alt" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="rate" jdbcType="REAL" property="rate" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>

  <!-- book 对应的 tag -->
  <resultMap id="BookDetailResultMap" type="com.coolron.book.domain.BookDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="alt" jdbcType="VARCHAR" property="alt" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="price" jdbcType="VARCHAR" property="price" />
    <result column="rate" jdbcType="REAL" property="rate" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="count" jdbcType="INTEGER" property="count" />

    <!-- Tag -->
    <collection property="tags" ofType="com.coolron.book.domain.Tag">
      <id column="tag_id" javaType="INTEGER" property="id"/>
      <result column="tag_count" jdbcType="INTEGER" property="count" />
      <result column="tag_name" jdbcType="VARCHAR" property="name" />
      <result column="tag_title" jdbcType="VARCHAR" property="title" />
      <result column="book_id" jdbcType="INTEGER" property="bookId" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, isbn, openid, title, image, alt, publisher, summary, price, rate, author, count
  </sql>

  <!-- 获取count的前几个 用于轮播图的访问 -->
  <select id="getTop" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
    order by count desc
    limit #{num, jdbcType=INTEGER}
  </select>

  <!-- 分页 -->
  <select id="getBookList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    order by id DESC
    limit ${page.begin}, ${page.pageSize}
  </select>

  <select id="findBookTotalCount" resultType="java.lang.Integer">
    select
    count(*)
    from book
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BookDetailResultMap">
    select
    a.*, b.id as 'tag_id', b.count as 'tag_count', b.name as 'tag_name', b.title as 'tag_title', b.book_id as 'book_id'
    from book a
    left join tag b
    on a.id = b.book_id
    where a.id = #{id,jdbcType=INTEGER}

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.coolron.book.domain.Book" useGeneratedKeys="true" keyProperty="id">
    insert into book (isbn, openid,
      title, image, alt, 
      publisher, summary, price, 
      rate, author, count)
    values (#{isbn,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{alt,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, 
      #{rate,jdbcType=REAL}, #{author,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.coolron.book.domain.Book" useGeneratedKeys="true" keyProperty="id">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        isbn,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="alt != null">
        alt,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="count != null">
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="alt != null">
        #{alt,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=REAL},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coolron.book.domain.Book">
    update book
    <set>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="alt != null">
        alt = #{alt,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=REAL},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coolron.book.domain.Book">
    update book
    set isbn = #{isbn,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      alt = #{alt,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=REAL},
      author = #{author,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>